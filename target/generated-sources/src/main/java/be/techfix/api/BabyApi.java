/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package be.techfix.api;

import be.techfix.model.BabyDetails;
import be.techfix.model.Error;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-08-07T19:46:23.535+02:00[Europe/Paris]")
@Validated
public interface BabyApi {

    @Operation(summary = "create request for baby.", description = "Get Baby details for respective identifier.", tags={ "Baby" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Baby details", content = @Content(mediaType = "application/json", schema = @Schema(implementation = BabyDetails.class))),
        
        @ApiResponse(responseCode = "404", description = "default schema for errors", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Error.class)))) })
    @RequestMapping(value = "/baby/{babyId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BabyDetails> getBaby(@Parameter(in = ParameterIn.PATH, description = "Identifier for baby.", required=true, schema=@Schema()) @PathVariable("babyId") String babyId);

}

